language: julia

os:
  - linux

julia:
  - release
  - nightly

notifications:
  email: false

sudo: false

apt:
  sources:
    - llvm-toolchain-precise-3.7
  packages:
    - clang-3.7

before_install:
  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
  - export CC=clang-3.7; export CXX=clang++-3.7;
  - bash .travis/amd_sdk.sh;
    tar -xjf AMD-SDK.tar.bz2;
    AMDAPPSDK=${HOME}/AMDAPPSDK;
    export OPENCL_VENDOR_PATH=${AMDAPPSDK}/etc/OpenCL/vendors;
    mkdir -p ${OPENCL_VENDOR_PATH};
    sh AMD-APP-SDK*.sh --tar -xf -C ${AMDAPPSDK};
    echo libamdocl64.so > ${OPENCL_VENDOR_PATH}/amdocl64.icd;
    export LD_LIBRARY_PATH=${AMDAPPSDK}/lib/x86_64:${LD_LIBRARY_PATH};
  - git clone https://github.com/clMathLibraries/clBLAS.git;
    mkdir -p clBLAS/build;
    cd clBLAS/build;
    cmake ../src -DBUILD_KTEST=OFF -DBUILD_TEST=OFF -DCMAKE_BUILD_TYPE=Release;
    make;
    cd ../..;
    export LD_LIBRARY_PATH=${HOME}/build/JuliaGPU/CLBLAS.jl/clBLAS/build/library:${LD_LIBRARY_PATH};

script:
  - julia -e 'Pkg.init(); Pkg.clone(pwd())'
  - julia -e 'Pkg.checkout("OpenCL");'
  - julia -e 'using CLBLAS; @assert isdefined(:CLBLAS); @assert typeof(CLBLAS) === Module'
  - julia -e 'Pkg.test("CLBLAS")'

# after_success:
#   - julia -e 'Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())';
